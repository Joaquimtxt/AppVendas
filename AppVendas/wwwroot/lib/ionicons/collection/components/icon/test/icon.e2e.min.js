import{expect}from"@playwright/test";import{test}from"../../../utils/test/playwright/index";test.describe("icon: basic",()=>{test("should not have visual regressions",async({page:t})=>{await t.goto("/"),await t.waitForLoadState("networkidle"),await expect(t).toHaveScreenshot("icon-diff.png",{fullPage:!0})}),test("some icons should flip when rtl",async({page:t})=>{await t.goto("/");var a=t.locator(".auto-flip-chevrons [name=chevron-forward] .icon-inner"),e=t.locator(".un-flip-chevrons [name=chevron-forward] .icon-inner"),a=(await expect(a).not.toHaveCSS("transform",/matrix\(-1/),await expect(e).not.toHaveCSS("transform",/matrix\(-1/),await t.evaluate(()=>{document.dir="rtl"}),await expect(a).toHaveCSS("transform",/matrix\(-1/),await expect(e).not.toHaveCSS("transform",/matrix\(-1/),await t.waitForLoadState("networkidle"),t.locator("#rtl-tests"));await expect(a).toHaveScreenshot("icon-rtl-diff.png")}),test("arrows should flip if dir changes on the element",async({page:t})=>{await t.goto("/");var a=t.locator(".auto-flip-chevrons [name=chevron-forward] .icon-inner"),e=t.locator(".un-flip-chevrons [name=chevron-forward] .icon-inner");await expect(a).not.toHaveCSS("transform",/matrix\(-1/),await expect(e).not.toHaveCSS("transform",/matrix\(-1/);const o=await t.$(".auto-flip-chevrons [name=chevron-forward]"),r=await t.$(".un-flip-chevrons [name=chevron-forward]");await o.evaluate(t=>t.setAttribute("dir","rtl")),await r.evaluate(t=>t.setAttribute("dir","rtl")),await expect(a).toHaveCSS("transform",/matrix\(-1/),await expect(e).not.toHaveCSS("transform",/matrix\(-1/)}),test("icon should reassess flipping when name changes",async({page:t})=>{await t.goto("/"),await t.evaluate(()=>{document.dir="rtl"});var a=t.locator(".auto-flip-chevrons ion-icon:nth-child(2)");await expect(a).toHaveAttribute("name","chevron-forward"),await expect(a).toHaveClass(/flip-rtl/);const e=await t.$(".auto-flip-chevrons ion-icon:nth-child(2)");await e.evaluate(t=>t.setAttribute("name","brush")),await expect(a).toHaveAttribute("name","brush"),await expect(a).not.toHaveClass(/flip-rtl/)})});